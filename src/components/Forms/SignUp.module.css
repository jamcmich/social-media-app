.flexContainer {
    height: 100vh;
    display: flex;
    flex-direction: row;
}

.leftColumn {
    display: flex;
    flex-direction: column;

    width: 42%;
    padding: 80px 60px;
    gap: 50px;
}

.logoContainer {
    display: flex;
    flex-direction: row;

    gap: 35px;

    color: var(--bluish-purple);
}

.logoContainer h1 {
    font-size: 4rem;
}

.illustrationContainer {
    width: 80%;
    margin: auto;
}

.headingContainer {
    display: flex;
    flex-direction: column;

    height: auto;
    gap: 30px;
}

.headingContainer h2 {
    font-style: normal;
    font-weight: 700;
    font-size: 3rem;
    line-height: 55px;
    color: var(--thamar-black);
}

.headingContainer p {
    font-style: normal;
    font-weight: 400;
    font-size: 1.5rem;
    line-height: 45px;

    color: var(--stone-cold);
}

.rightColumn {
    display: flex;
    flex-direction: column;

    width: 58%;
    padding: 90px 170px;
    gap: 30px;

    font-style: normal;
    font-weight: 500;
    color: white;

    background-color: var(--bluish-purple);
    border-radius: 50px 0 0 50px;
}

.rightColumn h1 {
    font-size: 3rem;
    line-height: 55px;
}

.rightColumn p {
    font-size: 1.75rem;
    line-height: 32px;
}

.rightColumn span {
    font-weight: 700;
    font-size: 1.75rem;
    line-height: 32px;
    text-decoration: underline;
}

.fieldsContainer {
    display: flex;
    flex-direction: column;

    padding: 90px 0;
    gap: 20px;
}

.fieldsContainer label {
    position: relative;
    top: 10px;
    left: 22px;
    width: fit-content;

    color: rgba(111, 73, 232, 0);
    background-color: rgba(111, 73, 232, 0);

    padding: 0;
    transition: color 0.4s ease, background-color 0.2s ease, padding 0.4s ease;
}

/* Workaround for selecting `label` elements when focusing `inputs`. */
.reverseElements {
    display: flex;
    flex-direction: column-reverse;
}

.customInputElement {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;

    border: 2px solid #FFFFFF;
    border-radius: 10px;
    color: var(--bluish-purple);
    background-color: white;

    padding: 20px 30px;
    transition: color 0.4s ease 0.4s, background-color 0.2s ease 0.4s;
}

.customInputElement:focus-within {
    color: white;
    background-color: var(--bluish-purple);

    transition: color 0.4s ease, background-color 0.2s ease, padding 0.4s ease;
}

.customInputElement input {
    align-self: stretch;
    flex-grow: 5;

    font-family: Inter, sans-serif;
    font-style: normal;
    font-weight: 400;
    font-size: 1.5rem;
    line-height: 29px;
    color: var(--bluish-purple);

    border: 0;
    background-color: transparent;

    outline: none;
    transition: color 0.4s ease 0.4s;
}

.customInputElement:not(:focus-within) input:not(:placeholder-shown) + .svgContainer path {
    fill: var(--bluish-purple);
    stroke: var(--bluish-purple);
}

.customInputElement:focus-within input {
    color: white;
    background-color: transparent;

    transition: color 0.4s ease, padding 0.4s ease;
}

.customInputElement:focus-within + label {
    color: white;
    background-color: var(--bluish-purple);

    padding: 0 10px;
    transition: color 0.4s ease 0.4s, background-color 0.4s ease 0.4s, padding 0.4s ease 0.4s;
}

.svgContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-grow: 1;
}

.svgContainer path {
    fill: rgba(111, 73, 232, 0.54);
    stroke: rgba(111, 73, 232, 0.54);

    transition: fill 0.2s ease 0.4s, stroke 0.2s ease 0.4s;
}

.customInputElement:focus-within .svgContainer path {
    fill: white;
    stroke: white;

    transition: fill 0.2s ease, stroke 0.2s ease;
}
